{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","articleClassName","classNames","TodoList","todos","map","getUserById","usersFromServer","find","App","useState","titleValue","setTitleValue","selectValue","setSelectValue","showTitleError","setTitleError","showSelectError","setSelectError","todosFromServer","setTodos","action","method","onSubmit","event","preventDefault","trimmedTitle","trim","newTodo","Math","max","type","placeholder","value","onChange","newValue","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49175fb5.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","type Props = {\n  user: {\n    id: number;\n    name: string;\n    username: string;\n    email: string;\n  } | null;\n};\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  if (!user) {\n    return null;\n  }\n\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: {\n    user: {\n      id: number;\n      name: string;\n      username: string;\n      email: string;\n    } | null;\n    id: number;\n    title: string,\n    completed: boolean;\n    userId: number;\n  }\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  if (!todo) {\n    return null;\n  }\n\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  const articleClassName = classNames('TodoInfo', {\n    'TodoInfo--completed': completed,\n  });\n\n  return (\n    <article data-id={id} className={articleClassName}>\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: {\n    user: {\n      id: number;\n      name: string;\n      username: string;\n      email: string;\n    } | null;\n    id: number;\n    title: string,\n    completed: boolean;\n    userId: number;\n  }[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nexport const App = () => {\n  const [titleValue, setTitleValue] = useState('');\n  const [selectValue, setSelectValue] = useState(0);\n  const [showTitleError, setTitleError] = useState(false);\n  const [showSelectError, setSelectError] = useState(false);\n\n  const [todos, setTodos] = useState(todosFromServer.map(todo => ({\n    ...todo,\n    user: getUserById(todo.userId),\n  })));\n\n  const getmaxTodoId = () => {\n    return Math.max(...todos.map(todo => todo.id), 0);\n  };\n\n  const hendleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value;\n\n    setTitleValue(newValue);\n    setTitleError(false);\n  };\n\n  const hendleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newValue = +event.target.value;\n\n    setSelectValue(newValue);\n    setSelectError(false);\n  };\n\n  const hendleAddToDo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const trimmedTitle = titleValue.trim();\n\n    if (!trimmedTitle) {\n      setTitleError(true);\n    }\n\n    if (!selectValue) {\n      setSelectError(true);\n    }\n\n    if (trimmedTitle && selectValue) {\n      const newTodo = {\n        id: getmaxTodoId() + 1,\n        title: titleValue,\n        userId: selectValue,\n        completed: false,\n        user: getUserById(selectValue),\n      };\n\n      setTodos([...todos, newTodo]);\n\n      setTitleValue('');\n      setSelectValue(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={hendleAddToDo}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titlenput\"\n              placeholder=\"Enter a title\"\n              value={titleValue}\n              onChange={hendleTitleChange}\n            />\n\n            {showTitleError\n            && <span className=\"error\">Please enter a title</span> }\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={selectValue}\n              onChange={hendleSelectChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option\n                  value={user.id}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {showSelectError\n          && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}